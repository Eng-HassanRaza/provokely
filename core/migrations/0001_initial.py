# Generated by Django 5.2.4 on 2025-09-30 12:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_comment_enabled', models.BooleanField(default=False)),
                ('require_approval_for_hate', models.BooleanField(default=True)),
                ('require_approval_for_negative', models.BooleanField(default=False)),
                ('auto_respond_to_positive', models.BooleanField(default=True)),
                ('auto_respond_to_negative', models.BooleanField(default=True)),
                ('auto_respond_to_hate', models.BooleanField(default=True)),
                ('response_style', models.CharField(choices=[('professional', 'Professional'), ('casual', 'Casual'), ('controversial', 'Controversial'), ('sarcastic', 'Sarcastic')], default='professional', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Settings',
                'verbose_name_plural': 'User Settings',
                'db_table': 'user_settings',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('facebook', 'Facebook'), ('youtube', 'YouTube'), ('twitter', 'Twitter')], db_index=True, max_length=20)),
                ('external_id', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('sentiment_label', models.CharField(blank=True, choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral'), ('hate', 'Hate')], db_index=True, max_length=20, null=True)),
                ('ai_response', models.TextField(blank=True, null=True)),
                ('response_posted', models.BooleanField(default=False)),
                ('requires_approval', models.BooleanField(default=False)),
                ('approved', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comments',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['platform', 'external_id'], name='comments_platfor_33c152_idx'), models.Index(fields=['user', 'platform'], name='comments_user_id_95cb95_idx'), models.Index(fields=['sentiment_label', 'requires_approval'], name='comments_sentime_65f897_idx')],
                'unique_together': {('platform', 'external_id')},
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('facebook', 'Facebook'), ('youtube', 'YouTube'), ('twitter', 'Twitter')], db_index=True, max_length=20)),
                ('external_id', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('is_monitored', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'posts',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'platform'], name='posts_user_id_2d2d6b_idx'), models.Index(fields=['platform', 'is_monitored'], name='posts_platfor_1faa0a_idx')],
                'unique_together': {('platform', 'external_id')},
            },
        ),
    ]
